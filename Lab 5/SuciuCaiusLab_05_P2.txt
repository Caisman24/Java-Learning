import java.util.Scanner;

public class Main {
	static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		System.out.println("Enter the number of figures: ");
		int number = scanner.nextInt();
		Form object = new Form();
		object.read(number);

		object.display();
	}
}



public interface GeometricForm {
	 default double areaSquare(double l) {
		return l * l;
	}

	default double perimeterSquare(double l) {
		return 4 * (l);
	}

	default double areaRectangle(double l, double L) {
		return l * L;
	}

	default double perimeterRectangle(double l, double L) {
		return 2 * (l + L);
	}

	default double areaCircle(double radius) {
		return Math.PI * radius * radius;
	}

	default double perimeterCircle(double radius) {
		return 2 * Math.PI * radius;
	}

	default double areaEquilTriangle(double l) {
		return l * Math.sqrt(3) / 4;
	}

	default double perimeterEquilTriangle(double l) {
		return 3 * l;
	}

	default double areaIsosTriangle(double l, double b) {
		return b * (Math.sqrt(l * l + b * b)) / 2;
	}

	default double perimeterIsosTriangle(double l, double b) {
		return 2 * l + b;
	}

}

import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;

public class Form implements GeometricForm {
	static Scanner scanner = new Scanner(System.in);
	List<Circle> circle = new LinkedList<>();
	List<Square> square = new LinkedList<>();
	List<Rectangle> rectangle = new LinkedList<>();
	List<EquilTriangle> equilTriangle = new LinkedList<>();
	List<IsoTriangle> isoTriangle = new LinkedList<>();

	public void read(int n) {
		System.out.print("1.Circle\n2.Square\n3.Rectangle\n4.Equilateral Traingle\n5.Iso Triangle\n\n");
		int option;
		for (int i = 0; i < n; i++) {
			System.out.println("\nYour option for figure " + (i + 1) + " : ");
			option = scanner.nextInt();
			switch (option) {
			case 1:
				addCircle();
				break;
			case 2:
				addSquare();
				break;
			case 3:
				addRectangle();
				break;
			case 4:
				addEquilTriangle();
				break;
			case 5:
				addIsosTriangle();
				break;
			}
		}
	}

	private void addEquilTriangle() {
		System.out.println("Enter length for equil triangle: ");
		double length = scanner.nextDouble();
		EquilTriangle object = new EquilTriangle(length);
		equilTriangle.add(object);
	}

	private void addIsosTriangle() {
		System.out.println("Enter length and base for isoTriangle: ");
		double length = scanner.nextDouble();
		double base = scanner.nextDouble();
		IsoTriangle object = new IsoTriangle(length, base);
		isoTriangle.add(object);
	}

	private void addCircle() {
		System.out.println("Enter radius for circle: ");
		double radius = scanner.nextDouble();
		Circle object = new Circle(radius);
		circle.add(object);
	}

	private void addRectangle() {
		System.out.println("Enter length and width for rectangle: ");
		double length = scanner.nextDouble();
		double width = scanner.nextDouble();
		Rectangle object = new Rectangle(length, width);
		rectangle.add(object);
	}

	private void addSquare() {
		System.out.println("Enter length for square: ");
		double length = scanner.nextDouble();
		Square object = new Square(length);
		square.add(object);
	}

	public void display() {
		System.out.println("\nWhich forms you want to see: "
				+ "\n1.Circle\n2.Square\n3.Rectangle\n4.Equilateral Traingle\n5.Iso Triangle" + "\n\nYour option: ");
		int option = scanner.nextInt();
		System.out.println();
		
		switch (option) {

		case 1:
			for (int i = 0; i < circle.size(); i++) {
				System.out.println("Circle no" + (i + 1) + " area: "
						+ String.format("%.2f", areaCircle(circle.get(i).radius)) + " and the perimeter: "
						+ String.format("%.2f", perimeterCircle(circle.get(i).radius)));
			}
			break;
		case 2:
			for (int i = 0; i < square.size(); i++) {
				System.out
						.println("Square no" + (i + 1) + " area: " + String.format("%.2f", areaSquare(square.get(i).l))
								+ " and the perimeter: " + String.format("%.2f", perimeterSquare(square.get(i).l)));
			}
			break;
		case 3:
			for (int i = 0; i < rectangle.size(); i++) {
				System.out.println("Rectangle no" + (i + 1) + " area: "
						+ String.format("%.2f", areaRectangle(rectangle.get(i).l, rectangle.get(i).L))
						+ " and the perimeter: "
						+ String.format("%.2f", perimeterRectangle(rectangle.get(i).l, rectangle.get(i).L)));
			}
			break;
		case 4:
			for (int i = 0; i < equilTriangle.size(); i++) {
				System.out.println("Equilateral Triangle no " + (i + 1) + " area: "
						+ String.format("%.2f", areaEquilTriangle(equilTriangle.get(i).l)) + " and the perimter: "
						+ String.format("%.2f", perimeterEquilTriangle(equilTriangle.get(i).l)));
			}
			break;
		case 5:
			for (int i = 0; i < isoTriangle.size(); i++) {
				System.out.println("Isoscel Triangle no " + (i + 1) + " area: "
						+ String.format("%.2f", areaIsosTriangle(isoTriangle.get(i).l, isoTriangle.get(i).b))
						+ " and the perimter: "
						+ String.format("%.2f", perimeterIsosTriangle(isoTriangle.get(i).l, isoTriangle.get(i).b)));
			}
			break;
		default:
			System.out.println("\nWrong input!");
			break;
		}
	}
}


public class Square {
	double l;

	public Square(double l) {
		this.l = l;
	}
}


public class Rectangle {
	double l, L;

	public Rectangle(double l, double L) {
		this.l = l;
		this.L = L;
	}
}


public class IsoTriangle {
	double l, b;

	public IsoTriangle(double l, double b) {
        this.l = l;
        this.b = b;
    }
}


public class Circle {
	double radius;

	public Circle(double radius) {
		this.radius = radius;
	}
}


public class EquilTriangle {
	double l;

    public EquilTriangle(double l) {
        this.l = l;
    }
}




